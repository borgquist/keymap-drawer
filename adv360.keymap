#include <dt-bindings/zmk/stp.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        swedish_a: swedish_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "SWEDISH_A";
        };

        swedish_o: swedish_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "SWEDISH_O";
        };

        email: email {
            compatible = "zmk,behavior-macro";
            label = "EMAIL";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_tap_time 0>,
                <&macro_tap>,
                <&kp F>,
                <&macro_tap>,
                <&kp R>,
                <&macro_tap>,
                <&kp E>,
                <&macro_tap>,
                <&kp D>,
                <&macro_tap>,
                <&kp R>,
                <&macro_tap>,
                <&kp I>,
                <&macro_tap>,
                <&kp K>,
                <&macro_tap>,
                <&kp DOT>,
                <&macro_tap>,
                <&kp B>,
                <&macro_tap>,
                <&kp O>,
                <&macro_tap>,
                <&kp R>,
                <&macro_tap>,
                <&kp G>,
                <&macro_tap>,
                <&kp Q>,
                <&macro_tap>,
                <&kp U>,
                <&macro_tap>,
                <&kp I>,
                <&macro_tap>,
                <&kp S>,
                <&macro_tap>,
                <&kp T>,
                <&macro_tap>,
                <&kp AT>,
                <&macro_tap>,
                <&kp G>,
                <&macro_tap>,
                <&kp M>,
                <&macro_tap>,
                <&kp A>,
                <&macro_tap>,
                <&kp I>,
                <&macro_tap>,
                <&kp L>,
                <&macro_tap>,
                <&kp DOT>,
                <&macro_tap>,
                <&kp C>,
                <&macro_tap>,
                <&kp O>,
                <&macro_tap>,
                <&kp M>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&kp ESCAPE  &kp N1        &kp N2     &kp N3    &kp N4     &kp N5  &none                                                                                        &none          &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB     &kp Q         &kp W      &kp E     &kp R      &kp T   &kp PLUS                                                                                     &none          &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSLH
&mo 1       &kp A         &kp S      &kp D     &kp F      &kp G   &kp MINUS  &kp LA(LC(LG(N2)))  &kp LA(LC(LG(N3)))      &kp LA(LC(LG(C)))  &kp LA(LC(LG(R)))  &none          &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z         &kp X      &kp C     &kp V      &kp B                                  &kp LS(LG(N4))          &kp UP                                               &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
&kp LCTRL   &kp LEFT_ALT  &kp EQUAL  &kp LEFT  &kp RIGHT          &kp SPACE  &kp LEFT_COMMAND    &mo 1                   &kp DOWN           &kp ENTER          &kp BACKSPACE          &none   &none      &none    &none     &kp TILDE
            >;
        };

        layer1 {
            display-name = "Fn";
            bindings = <
&trans  &trans                    &trans             &kp LA(LS(N2))     &kp LA(N3)         &trans          &bootloader                                                                     &bootloader       &trans             &none         &kp SLASH  &kp KP_MULTIPLY  &none       &kp UNDER
&trans  &trans                    &trans             &trans             &kp LA(LC(LG(G)))  &trans          &trans                                                                          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp N7        &kp N8     &kp N9           &trans      &kp LA(A)
&trans  &kp LA(LC(LG(W)))         &kp LA(LC(LG(S)))  &kp LA(LC(LG(C)))  &kp LA(LC(LG(R)))  &kp LG(ESCAPE)  &kp LG(SPACE)  &trans  &email      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp NUMBER_4  &kp N5     &kp N6           &swedish_o  &swedish_a
&trans  &kp LA(LC(LG(NUMBER_1)))  &trans             &kp LG(LEFT)       &kp LG(RIGHT)      &kp EQUAL                              &trans      &trans                                                         &trans             &kp N1        &kp N2     &kp N3           &trans      &trans
&trans  &trans                    &trans             &kp LA(LEFT)       &kp LA(RIGHT)                      &trans         &trans  &trans      &trans                &trans                 &trans                               &kp N0        &none      &kp DOT          &trans      &trans
            >;

            label = "L1";
        };

        extra1 {
            display-name = "Red";
            status = "reserved";
        };

        extra2 {
            display-name = "Purple";
            status = "reserved";
        };

        extra3 {
            display-name = "Cyan";
            status = "reserved";
        };

        extra4 {
            display-name = "Yellow";
            status = "reserved";
        };
    };
};
